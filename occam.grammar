@top Program { Process }

Process { Assignment | Input | Output | "SKIP" | "STOP" | Sequence | Conditional | Parallel }

processList = { Process processList | Process }

/// Assignment and values

Assignment { variable ":=" expression }

expression { operand | Monop operand | operand Binop operand }

operand { variable | literal }

variable { Name }

literal { Integer }

Monop { "-" | "MINUS" | "~" | "BITNOT" | "NOT" | "SIZE" }

Binop { "+" | "-" | "*" | "/" | "\\" | "REM" | "PLUS" | "MINUS" | "TIMES" | "/\\" | "\\/" | "><" | "BITAND" | "BITOR" | "AND" | "OR" | "=" | "<>" | "<" | ">" | ">=" | "<=" | "AFTER" }

/// Input and Output

Input { Channel "?" inputItem }

inputItem { variable }

Output { Channel "!" outputItem }

outputItem { expression }

Channel { name }

/// Sequencing

Sequence { "SEQ" newline indent processList }

/// Tokens

@external tokens indentation from "./tokens" { indent, dedent }

@external tokens newlines from "./tokens" { newline, newlineBracketed, newlineEmpty, eof }

@tokens {
  Name { @asciiLetter+ }
  Integer { @digit+ }
}