
@book{oc1,
  title     = "Occam Programming Manual",
  author = "INMOS Limited",
  editor    = "Tony Hoare",
  year      = 1984,
  series = "Prentice Hall Series 1984",
  Publisher = "Prentice Hall",
  location = "UK"
}

@article{laws,
title = {The laws of OCCAM programming},
journal = {Theoretical Computer Science},
volume = {60},
number = {2},
pages = {177-229},
year = {1988},
issn = {0304-3975},
doi = {https://doi.org/10.1016/0304-3975(88)90049-7},
url = {https://www.sciencedirect.com/science/article/pii/0304397588900497},
author = {A.W. Roscoe and C.A.R. Hoare},
abstract = {One of the attractive features of occam is the large number of memorable algebraic laws which exist relating programs. We investigate these laws and, by discovering a normal form for WHILE-free programs, show that they completely characterise the language's semantics.}
}

@misc{ease,
url={https://www.researchgate.net/publication/2889618_Process_Interaction_Models}
}

@phdthesis{ease,
author = {Ericsson-Zenith, Steven},
year = {1992},
month = {07},
title = {Process Interaction Models}
}

@misc{occampi, title={Occam-pi: Blending the best of CSP and the pi-calculus}, url={https://www.cs.kent.ac.uk/projects/ofa/kroc/}, journal={occam-pi and KRoC: blending CSP and the pi-calculus}, author={Welch, Peter and Barnes, Fred}, year={2013}, month={Mar}}

@misc{go, title={Frequently asked questions (FAQ)}, url={https://go.dev/doc/faq#csp}, journal={Go}, publisher={Alphabet}, author={The Go Development Team}}

@article{erlang,
author = {Armstrong, Joe},
title = {Erlang},
year = {2010},
issue_date = {September 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {53},
number = {9},
issn = {0001-0782},
url = {https://doi.org/10.1145/1810891.1810910},
doi = {10.1145/1810891.1810910},
abstract = {The same component isolation that made it effective for large distributed telecom systems makes it effective for multicore CPUs and networked applications.},
journal = {Commun. ACM},
month = {sep},
pages = {68–75},
numpages = {8}
}

@book{oc21,
  title     = "occam 2.1 Reference Manual",
  author = "SGS-THOMSON Microelectronics Limited",
  year      = 1995,
  Publisher = "Prentice Hall",
  location = "UK",
  available = "https://www.wotug.org/occam/documentation/oc21refman.pdf"
}

@misc{microbit, url={https://microbit.org/get-started/user-guide/features-in-depth/}, journal={micro:bit}, publisher={Micro:bit Educational Foundation}}

@misc{logo, title={Logo manual}, url={https://web.archive.org/web/20160911020834/https://dspace.mit.edu/handle/1721.1/6226}, journal={DSpace@MIT}, publisher={MITLibraries}, author={Abelson, Hal and Goodman, Nat and Rudolph, Lee}, year={1974}, month={Dec}}

@misc{scratch, url={https://scratch.mit.edu/}, journal={Scratch}, publisher={MIT}}

@article{scheduling,
author = {Liu, C. L. and Layland, James W.},
title = {Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment},
year = {1973},
issue_date = {Jan. 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/321738.321743},
doi = {10.1145/321738.321743},
abstract = {The problem of multiprogram scheduling on a single processor is studied from the viewpoint of the characteristics peculiar to the program functions that need guaranteed service. It is shown that an optimum fixed priority scheduler possesses an upper bound to processor utilization which may be as low as 70 percent for large task sets. It is also shown that full processor utilization can be achieved by dynamically assigning priorities on the basis of their current deadlines. A combination of these two scheduling techniques is also discussed.},
journal = {J. ACM},
month = {jan},
pages = {46–61},
numpages = {16}
}

@misc{codecademy, url={https://www.codecademy.com/}, journal={Codecademy}, publisher={Skillsoft}}

@misc{jison,
  author = {Zachary Carter},
  title = {Jison},
  year = {2009},
  publisher = {GitHub},
  howpublished = {\url{https://github.com/zaach/jison}},
}

@misc{jisonlex,
  author = {Zachary Carter},
  title = {Jison-Lex},
  year = {2013},
  publisher = {GitHub},
  howpublished = {\url{https://github.com/zaach/jison-lex}},
}

@misc{whitespace,
  author = {Chris Dibbern},
  title = {Jison Examples: semwhitespace_lex},
  year = {2013},
  publisher = {GitHub},
  howpublished = {\url{https://github.com/zaach/jison/blob/master/examples/semwhitespace_lex.jison}},
}

@article{transputer, title={The Transputer}, volume={13}, DOI={10.1145/327070.327269}, number={3}, journal={ACM SIGARCH Computer Architecture News}, author={Whitby-Strevens, Colin}, year={1985}, pages={292–300}}

@book{Benyon_Turner_Turner_2006, place={Harlow}, title={Designing Interactive Systems: People, activities, contexts, technologies}, publisher={Addison-Wesley}, author={Benyon, David and Turner, Philip and Turner, Susan}, year={2006}}

@misc{codemirror, url={https://codemirror.net/}, journal={CodeMirror}, author={Haverbeke, Marijn}}
