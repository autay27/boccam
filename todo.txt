-Fix the EOF-related parsing/lexing problem
-use monads
-hook up more parts of the program - Need to figure out elm subscriptions!
-keyboard and screen channels which connect into elm

What should the monad be? atm we have this thing

type alias Model = { output: String, running: (List Proc), waiting: (List WaitingProc), state: State }

for a monad we need M a, $>, and result. Here, it's a bit complicated because... I guess it's the monad for a bunch of processes? what's the value? I guess each process ultimately returns a value. So result v = {no ouput, 1 running proces=v, no waiting, no state} 

$> :: M a -> (a -> M b) -> M b

so in this cast (a -> M b) is stuff like the below

    print xs m = (m with xs concat'd on the output)

    update s m = (m with state s)

    spawn xs m = (m with xs concat on running states)

    pause xs m = (m with xs concat on waiting states)

i.e. xm $> (f x) = case xm of {o, r, w, s} -> (f x) o r w s 

even better if eac f can index the arguments and get the relevant ones without touching the rest but that's kind of a headache. 

we also need stuff like 'processesOf m' because the pattern matching and reconstructing is just a pain right? but it's against the monad rule right? that's good

well, there is no way I can define $> (frankly, this is good) so let's just cope and define those things separaetly for now.

---

Should we also have Outcome become a monad? Yes of course. Whenever we have case x' of RunErr x -> (f x), Ran x -> (g x), Blocked x -> (h x), and do stuff, we should instead have 

x |> andThen2 f g h 

But let's leave that and do the m thing for now

---

I remember I have an issue where because you need to hit the while loop to unroll all the processes inside it, they're less likely which is wrong? I dunno something to do wit the while we'll find it.

Thinking about whether to implement the type system from occam 2.1 so that users can easily work with strings and chars. > Enough to be able to draw primitves to the screen (maybe even have sounds) so users can make graphics easily 

codemirror can allow some services like automatic indentation help?